#reference https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions

# Copyright (c) Microsoft Corporation.
# Licensed under the MIT license.

# This continuous integration pipeline is triggered anytime a user pushes code to the repo.
# This pipeline builds the Wpf project, runs unit tests, then saves the MSIX build artifact.
name:  Wpf Continuous Integration

# Trigger on every master branch push and pull request
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  build:

    runs-on: windows-latest

    env:
      Solution_Path: DataToolChain.sln
      Wpf_Project_Path: DataToolChain.Ui\DataToolChain.Ui.csproj
      Output_Directory: DataToolChain.Ui\bin\Debug\netcoreapp3.1
      

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.

    # Use Nerdbank.GitVersioning to set version variables: https://github.com/AArnott/nbgv
    - name: Use Nerdbank.GitVersioning to set version variables
      uses: aarnott/nbgv@v0.3
      with:
        setAllVars: true
        stamp: package.json

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.302'

    # Test
    #- name: Execute Unit Tests
    #  run: dotnet test $env:Test_Project_Path
    
    # Build
    - name: Build application
      run: dotnet build

    # Upload the binaries
    - name: Upload build artifacts
      uses: actions/upload-artifact@v1
      with:
        name: Application Binaries
        path: ${{ env.Output_Directory }}
